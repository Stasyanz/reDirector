import asyncio
import logging
from aiogram import Bot, Dispatcher
from aiogram.types import Message, ContentType, Update
from aiogram.filters import Command
from aiogram.exceptions import TelegramBadRequest, TelegramForbiddenError
from config import BOT_TOKEN, TARGET_GROUP_ID, ADMIN_ID, SOURCE_CHANNEL_USERNAME, MESSAGE_THREAD_ID

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()


@dp.message(Command("start"))
async def start_command(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    if message.from_user and message.from_user.id == ADMIN_ID:
        await message.answer(
            "ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!\n\n"
            f"üì∫ –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–π –∫–∞–Ω–∞–ª: @{SOURCE_CHANNEL_USERNAME}\n"
            f"üéØ –¶–µ–ª–µ–≤–∞—è –≥—Ä—É–ø–ø–∞: {TARGET_GROUP_ID}\n\n"
            "–î–æ–±–∞–≤—å—Ç–µ –º–µ–Ω—è –≤ –∫–∞–Ω–∞–ª –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Å –ø—Ä–∞–≤–∞–º–∏:\n"
            "‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä —Å–æ–æ–±—â–µ–Ω–∏–π\n"
            "‚Ä¢ –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π\n\n"
            "–ë–æ—Ç –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ—Å—ã–ª–∞—Ç—å –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞ –≤ —Ü–µ–ª–µ–≤—É—é –≥—Ä—É–ø–ø—É.\n\n"
            "–ö–æ–º–∞–Ω–¥—ã:\n"
            "/status - —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞\n"
            "/info - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —á–∞—Ç–∞—Ö\n"
            "/test - —Ç–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏"
        )
    else:
        await message.answer("–≠—Ç–æ—Ç –±–æ—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –ø–µ—Ä–µ—Å—ã–ª–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ –∫–∞–Ω–∞–ª–∞ –≤ –≥—Ä—É–ø–ø—É.")


@dp.message(Command("status"))
async def status_command(message: Message):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞"""
    if message.from_user and message.from_user.id == ADMIN_ID:
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –∫ —Ü–µ–ª–µ–≤–æ–π –≥—Ä—É–ø–ø–µ
            chat_info = await bot.get_chat(TARGET_GROUP_ID)
            await message.answer(
                f"‚úÖ –°—Ç–∞—Ç—É—Å –±–æ—Ç–∞:\n"
                f"üì∫ –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–π –∫–∞–Ω–∞–ª: @{SOURCE_CHANNEL_USERNAME}\n"
                f"üéØ –¶–µ–ª–µ–≤–∞—è –≥—Ä—É–ø–ø–∞: {chat_info.title}\n"
                f"üÜî ID –≥—Ä—É–ø–ø—ã: {TARGET_GROUP_ID}\n"
                f"üìä –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ"
            )
        except Exception as e:
            await message.answer(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –≥—Ä—É–ø–ø–µ: {e}")


@dp.message(Command("info"))
async def info_command(message: Message):
    """–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–∞—Ö (–∫–∞–Ω–∞–ª/–≥—Ä—É–ø–ø–∞)"""
    if message.from_user and message.from_user.id == ADMIN_ID:
        info_text = "üîç **–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —á–∞—Ç–∞—Ö:**\n\n"
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ü–µ–ª–µ–≤–æ–π –≥—Ä—É–ø–ø–µ
        try:
            target_chat = await bot.get_chat(TARGET_GROUP_ID)
            info_text += f"üéØ **–¶–µ–ª–µ–≤–∞—è –≥—Ä—É–ø–ø–∞/–∫–∞–Ω–∞–ª:**\n"
            info_text += f"   ‚Ä¢ –ù–∞–∑–≤–∞–Ω–∏–µ: {target_chat.title}\n"
            info_text += f"   ‚Ä¢ –¢–∏–ø: `{target_chat.type}`\n"
            info_text += f"   ‚Ä¢ ID: `{target_chat.id}`\n"
            info_text += f"   ‚Ä¢ Username: @{target_chat.username or '–ù–µ—Ç'}\n"
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–ø–∏–∫–∏
            if hasattr(target_chat, 'is_forum') and target_chat.is_forum:
                info_text += f"   ‚Ä¢ üìù –§–æ—Ä—É–º —Å —Ç–æ–ø–∏–∫–∞–º–∏: –î–ê\n"
            else:
                info_text += f"   ‚Ä¢ üìù –§–æ—Ä—É–º —Å —Ç–æ–ø–∏–∫–∞–º–∏: –ù–ï–¢\n"
            
            if MESSAGE_THREAD_ID:
                info_text += f"   ‚Ä¢ üßµ ID —Ç–æ–ø–∏–∫–∞: {MESSAGE_THREAD_ID}\n"
            
        except Exception as e:
            info_text += f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ü–µ–ª–µ–≤–æ–π –≥—Ä—É–ø–ø–µ: {e}\n"
        
        info_text += "\n"
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∏—Å—Ö–æ–¥–Ω–æ–º –∫–∞–Ω–∞–ª–µ
        try:
            source_chat = await bot.get_chat(f"@{SOURCE_CHANNEL_USERNAME}")
            info_text += f"üì∫ **–ò—Å—Ö–æ–¥–Ω—ã–π —á–∞—Ç:**\n"
            info_text += f"   ‚Ä¢ –ù–∞–∑–≤–∞–Ω–∏–µ: {source_chat.title}\n"
            info_text += f"   ‚Ä¢ –¢–∏–ø: `{source_chat.type}`\n"
            info_text += f"   ‚Ä¢ ID: `{source_chat.id}`\n"
            info_text += f"   ‚Ä¢ Username: @{source_chat.username or '–ù–µ—Ç'}\n"
            
            if hasattr(source_chat, 'is_forum') and source_chat.is_forum:
                info_text += f"   ‚Ä¢ üìù –§–æ—Ä—É–º —Å —Ç–æ–ø–∏–∫–∞–º–∏: –î–ê\n"
            else:
                info_text += f"   ‚Ä¢ üìù –§–æ—Ä—É–º —Å —Ç–æ–ø–∏–∫–∞–º–∏: –ù–ï–¢\n"
                
        except Exception as e:
            info_text += f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∏—Å—Ö–æ–¥–Ω–æ–º —á–∞—Ç–µ: {e}\n"
        
        await message.answer(info_text, parse_mode="Markdown")


@dp.message(Command("test"))
async def test_command(message: Message):
    """–¢–µ—Å—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–µ—Ä–µ—Å—ã–ª–∫–∏"""
    if message.from_user and message.from_user.id == ADMIN_ID:
        try:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ü–µ–ª–µ–≤—É—é –≥—Ä—É–ø–ø—É
            test_params = {
                "chat_id": TARGET_GROUP_ID,
                "text": "üß™ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –±–æ—Ç–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –ø–µ—Ä–µ—Å—ã–ª–∫–∏"
            }
            
            if MESSAGE_THREAD_ID:
                test_params["message_thread_id"] = MESSAGE_THREAD_ID
                
            sent = await bot.send_message(**test_params)
            await message.answer(f"‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ (ID: {sent.message_id})")
        except Exception as e:
            await message.answer(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")


async def forward_message_logic(message: Message, source_type: str):
    """–û–±—â–∞—è –ª–æ–≥–∏–∫–∞ –ø–µ—Ä–µ—Å—ã–ª–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π"""
    try:
        # –î–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        logger.info(f"üîç [{source_type}] –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ:")
        logger.info(f"  - –ß–∞—Ç: {message.chat.title} (@{message.chat.username}) ID: {message.chat.id}")
        logger.info(f"  - –¢–∏–ø —á–∞—Ç–∞: {message.chat.type}")
        logger.info(f"  - –ö–æ–Ω—Ç–µ–Ω—Ç: {message.content_type}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–ø–∏–∫
        if hasattr(message, 'message_thread_id') and message.message_thread_id:
            logger.info(f"  - –¢–æ–ø–∏–∫ ID: {message.message_thread_id}")
        
        if message.document:
            logger.info(f"  - –î–æ–∫—É–º–µ–Ω—Ç: {message.document.file_name} ({message.document.file_size} bytes)")
            logger.info(f"  - MIME: {message.document.mime_type}")
        
        if message.text:
            logger.info(f"  - –¢–µ–∫—Å—Ç: {message.text[:100]}...")
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –Ω—É–∂–Ω—ã–π –∫–∞–Ω–∞–ª
        if not message.chat.username:
            logger.warning(f"‚ùå –ß–∞—Ç –±–µ–∑ username: {message.chat.title} (ID: {message.chat.id})")
            return
            
        if message.chat.username.lower() != SOURCE_CHANNEL_USERNAME.lower():
            logger.info(f"‚ÑπÔ∏è –°–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –¥—Ä—É–≥–æ–≥–æ —á–∞—Ç–∞: @{message.chat.username} (–æ–∂–∏–¥–∞–µ—Ç—Å—è @{SOURCE_CHANNEL_USERNAME})")
            return
        
        logger.info(f"‚úÖ –ß–∞—Ç —Å–æ–≤–ø–∞–¥–∞–µ—Ç! –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ...")
        
        # –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ü–µ–ª–µ–≤—É—é –≥—Ä—É–ø–ø—É
        forward_params = {
            "chat_id": TARGET_GROUP_ID,
            "from_chat_id": message.chat.id,
            "message_id": message.message_id
        }
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–ø–∏–∫, –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω
        if MESSAGE_THREAD_ID:
            forward_params["message_thread_id"] = MESSAGE_THREAD_ID
            
        forwarded = await bot.forward_message(**forward_params)
        
        topic_info = f" –≤ —Ç–æ–ø–∏–∫ {MESSAGE_THREAD_ID}" if MESSAGE_THREAD_ID else ""
        logger.info(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ—Å–ª–∞–Ω–æ –≤ –≥—Ä—É–ø–ø—É {TARGET_GROUP_ID}{topic_info}")
        logger.info(f"   ID –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {forwarded.message_id}")
        
    except TelegramBadRequest as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Å—ã–ª–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        if "chat not found" in str(e).lower():
            logger.error("üí° –ì—Ä—É–ø–ø–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ TARGET_GROUP_ID")
        elif "not enough rights" in str(e).lower():
            logger.error("üí° –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –ø–µ—Ä–µ—Å—ã–ª–∫–∏ –≤ –≥—Ä—É–ø–ø—É")
        elif "message to forward not found" in str(e).lower():
            logger.error("üí° –ò—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
    
    except TelegramForbiddenError as e:
        logger.error(f"‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω: {e}")
        logger.error("üí° –ë–æ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω –≤ –≥—Ä—É–ø–ø—É –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä")
    
    except Exception as e:
        logger.error(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        logger.error(f"Traceback: {traceback.format_exc()}")


@dp.channel_post()
async def forward_channel_post(message: Message):
    """–ü–µ—Ä–µ—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ –∫–∞–Ω–∞–ª–∞ –≤ –≥—Ä—É–ø–ø—É"""
    logger.info("üì∫ CHANNEL_POST –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å—Ä–∞–±–æ—Ç–∞–ª!")
    await forward_message_logic(message, "CHANNEL_POST")


@dp.edited_channel_post()
async def forward_edited_channel_post(message: Message):
    """–ü–µ—Ä–µ—Å—ã–ª–∫–∞ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ –∫–∞–Ω–∞–ª–∞"""
    logger.info("üìù EDITED_CHANNEL_POST –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å—Ä–∞–±–æ—Ç–∞–ª!")
    # –ú–æ–∂–Ω–æ —Ç–∞–∫–∂–µ –ø–µ—Ä–µ—Å—ã–ª–∞—Ç—å –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    # await forward_message_logic(message, "EDITED_CHANNEL_POST")


@dp.message()
async def handle_regular_messages(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–Ω–µ –∏–∑ –∫–∞–Ω–∞–ª–∞)"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–µ—Ç –ª–∏ —ç—Ç–æ –±—ã—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –≥—Ä—É–ø–ø—ã/—Å—É–ø–µ—Ä–≥—Ä—É–ø–ø—ã
    if message.chat.type in ["group", "supergroup"]:
        logger.info("üì® –û–ë–´–ß–ù–û–ï —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –≥—Ä—É–ø–ø—ã/—Å—É–ø–µ—Ä–≥—Ä—É–ø–ø—ã")
        await forward_message_logic(message, "REGULAR_MESSAGE_FROM_GROUP")
    elif message.chat.type == "channel":
        logger.info("üì® –û–ë–´–ß–ù–û–ï —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –∫–∞–Ω–∞–ª–∞ (–≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–∞–≤–∞ –Ω–µ –ø–æ–∑–≤–æ–ª—è—é—Ç –ø–æ–ª—É—á–∞—Ç—å channel_post)")
        await forward_message_logic(message, "REGULAR_MESSAGE_FROM_CHANNEL")
    else:
        logger.debug(f"üí¨ –ü–æ–ª—É—á–µ–Ω–æ –æ–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {message.from_user.username if message.from_user else 'Unknown'}")


# –î–æ–±–∞–≤–ª—è–µ–º middleware –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Å–µ—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
@dp.update.outer_middleware()
async def log_all_updates(handler, event: Update, data):
    """Middleware –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Å–µ—Ö —Ç–∏–ø–æ–≤ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π"""
    logger.info(f"üîÑ –ü–æ–ª—É—á–µ–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–∏–ø–∞: {type(event).__name__}")
    
    if event.message:
        logger.info(f"   üìÑ Message: {event.message.chat.type} - {event.message.chat.title} (@{event.message.chat.username or '–ù–µ—Ç'})")
    elif event.channel_post:
        logger.info(f"   üì∫ Channel Post: {event.channel_post.chat.title} (@{event.channel_post.chat.username or '–ù–µ—Ç'})")
    elif event.edited_channel_post:
        logger.info(f"   üìù Edited Channel Post: {event.edited_channel_post.chat.title}")
    elif event.edited_message:
        logger.info(f"   ‚úèÔ∏è Edited Message: {event.edited_message.chat.title}")
    else:
        logger.info(f"   ‚ùì –î—Ä—É–≥–æ–π —Ç–∏–ø –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è")
    
    return await handler(event, data)


async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"""
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
        bot_info = await bot.get_me()
        logger.info(f"‚úÖ –ë–æ—Ç @{bot_info.username} —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –∫ —Ü–µ–ª–µ–≤–æ–π –≥—Ä—É–ø–ø–µ
        try:
            chat_info = await bot.get_chat(TARGET_GROUP_ID)
            logger.info(f"üéØ –¶–µ–ª–µ–≤–∞—è –≥—Ä—É–ø–ø–∞: {chat_info.title} (ID: {TARGET_GROUP_ID})")
            logger.info(f"    –¢–∏–ø: {chat_info.type}")
        except Exception as e:
            logger.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ü–µ–ª–µ–≤–æ–π –≥—Ä—É–ø–ø–µ: {e}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –∫ –∏—Å—Ö–æ–¥–Ω–æ–º—É –∫–∞–Ω–∞–ª—É
        try:
            source_chat = await bot.get_chat(f"@{SOURCE_CHANNEL_USERNAME}")
            logger.info(f"üì∫ –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–π —á–∞—Ç: @{SOURCE_CHANNEL_USERNAME} ({source_chat.title})")
            logger.info(f"    –¢–∏–ø: {source_chat.type}")
            logger.info(f"    ID: {source_chat.id}")
        except Exception as e:
            logger.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º–æ–º —á–∞—Ç–µ: {e}")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º polling
        logger.info("üîÑ –ó–∞–ø—É—Å–∫ polling...")
        await dp.start_polling(bot)
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}")
        import traceback
        logger.error(f"Traceback: {traceback.format_exc()}")
    finally:
        await bot.session.close()


if __name__ == "__main__":
    asyncio.run(main()) 