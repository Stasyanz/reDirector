import asyncio
import logging
from aiogram import Bot, Dispatcher
from aiogram.types import Message, ContentType
from aiogram.filters import Command
from aiogram.exceptions import TelegramBadRequest, TelegramForbiddenError
from config import BOT_TOKEN, TARGET_GROUP_ID, ADMIN_ID, SOURCE_CHANNEL_USERNAME

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()


@dp.message(Command("start"))
async def start_command(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    if message.from_user and message.from_user.id == ADMIN_ID:
        await message.answer(
            "ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!\n\n"
            f"üì∫ –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–π –∫–∞–Ω–∞–ª: @{SOURCE_CHANNEL_USERNAME}\n"
            f"üéØ –¶–µ–ª–µ–≤–∞—è –≥—Ä—É–ø–ø–∞: {TARGET_GROUP_ID}\n\n"
            "–î–æ–±–∞–≤—å—Ç–µ –º–µ–Ω—è –≤ –∫–∞–Ω–∞–ª –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Å –ø—Ä–∞–≤–∞–º–∏:\n"
            "‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä —Å–æ–æ–±—â–µ–Ω–∏–π\n"
            "‚Ä¢ –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π\n\n"
            "–ë–æ—Ç –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ—Å—ã–ª–∞—Ç—å –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞ –≤ —Ü–µ–ª–µ–≤—É—é –≥—Ä—É–ø–ø—É."
        )
    else:
        await message.answer("–≠—Ç–æ—Ç –±–æ—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –ø–µ—Ä–µ—Å—ã–ª–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ –∫–∞–Ω–∞–ª–∞ –≤ –≥—Ä—É–ø–ø—É.")


@dp.message(Command("status"))
async def status_command(message: Message):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞"""
    if message.from_user and message.from_user.id == ADMIN_ID:
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –∫ —Ü–µ–ª–µ–≤–æ–π –≥—Ä—É–ø–ø–µ
            chat_info = await bot.get_chat(TARGET_GROUP_ID)
            await message.answer(
                f"‚úÖ –°—Ç–∞—Ç—É—Å –±–æ—Ç–∞:\n"
                f"üì∫ –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–π –∫–∞–Ω–∞–ª: @{SOURCE_CHANNEL_USERNAME}\n"
                f"üéØ –¶–µ–ª–µ–≤–∞—è –≥—Ä—É–ø–ø–∞: {chat_info.title}\n"
                f"üÜî ID –≥—Ä—É–ø–ø—ã: {TARGET_GROUP_ID}\n"
                f"üìä –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ"
            )
        except Exception as e:
            await message.answer(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –≥—Ä—É–ø–ø–µ: {e}")


@dp.message()
async def forward_message(message: Message):
    """–ü–µ—Ä–µ—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ –∫–∞–Ω–∞–ª–∞ –≤ –≥—Ä—É–ø–ø—É"""
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –∫–∞–Ω–∞–ª–∞
        if not message.chat or message.chat.type != "channel":
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –Ω—É–∂–Ω—ã–π –∫–∞–Ω–∞–ª
        if not message.chat.username or message.chat.username.lower() != SOURCE_CHANNEL_USERNAME.lower():
            logger.debug(f"–°–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –Ω–µ–ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –∫–∞–Ω–∞–ª–∞: @{message.chat.username} (–æ–∂–∏–¥–∞–µ—Ç—Å—è @{SOURCE_CHANNEL_USERNAME})")
            return
        
        # –õ–æ–≥–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–æ–±—â–µ–Ω–∏–∏
        logger.info(f"–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –∫–∞–Ω–∞–ª–∞ @{message.chat.username} ({message.chat.title})")
        
        # –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ü–µ–ª–µ–≤—É—é –≥—Ä—É–ø–ø—É
        forwarded = await bot.forward_message(
            chat_id=TARGET_GROUP_ID,
            from_chat_id=message.chat.id,
            message_id=message.message_id
        )
        
        logger.info(f"–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ—Å–ª–∞–Ω–æ –≤ –≥—Ä—É–ø–ø—É {TARGET_GROUP_ID}")
        
    except TelegramBadRequest as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Å—ã–ª–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        if "chat not found" in str(e).lower():
            logger.error("–ì—Ä—É–ø–ø–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ TARGET_GROUP_ID")
        elif "not enough rights" in str(e).lower():
            logger.error("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –ø–µ—Ä–µ—Å—ã–ª–∫–∏ –≤ –≥—Ä—É–ø–ø—É")
    
    except TelegramForbiddenError as e:
        logger.error(f"–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω: {e}")
        logger.error("–ë–æ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω –≤ –≥—Ä—É–ø–ø—É –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä")
    
    except Exception as e:
        logger.error(f"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")


async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"""
    logger.info("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
        bot_info = await bot.get_me()
        logger.info(f"–ë–æ—Ç @{bot_info.username} —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –∫ —Ü–µ–ª–µ–≤–æ–π –≥—Ä—É–ø–ø–µ
        try:
            chat_info = await bot.get_chat(TARGET_GROUP_ID)
            logger.info(f"–¶–µ–ª–µ–≤–∞—è –≥—Ä—É–ø–ø–∞: {chat_info.title} (ID: {TARGET_GROUP_ID})")
        except Exception as e:
            logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ü–µ–ª–µ–≤–æ–π –≥—Ä—É–ø–ø–µ: {e}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –∫ –∏—Å—Ö–æ–¥–Ω–æ–º—É –∫–∞–Ω–∞–ª—É
        try:
            source_chat = await bot.get_chat(f"@{SOURCE_CHANNEL_USERNAME}")
            logger.info(f"–û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–π –∫–∞–Ω–∞–ª: @{SOURCE_CHANNEL_USERNAME} ({source_chat.title})")
        except Exception as e:
            logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º–æ–º –∫–∞–Ω–∞–ª–µ: {e}")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º polling
        await dp.start_polling(bot)
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}")
    finally:
        await bot.session.close()


if __name__ == "__main__":
    asyncio.run(main()) 